# Generated by Django 5.2 on 2025-06-29 10:31

import django.db.models.deletion
from django.db import migrations, models

def convert_role_pricerule(apps, schema_editor):
    ParticipantRole = apps.get_model("kcevent", "ParticipantRole")
    KCEventPriceRule = apps.get_model("kcevent", "KCEventPriceRule")
    for row in KCEventPriceRule.objects.all():
        # check if a proper ParticipantRole exists..
        if row.role_old:
            txt = str(row.get_role_old_display())
            pr = None
            try:
                pr = ParticipantRole.objects.get(event=row.event, name=txt)
            except ParticipantRole.DoesNotExist:
                pr = ParticipantRole(
                    event=row.event,
                    name=txt
                )
                pr.save()
            row.role = pr
            row.save()
        
def convert_role_participant(apps, schema_editor):
    ParticipantRole = apps.get_model("kcevent", "ParticipantRole")
    Participant = apps.get_model("kcevent", "Participant")
    KCEventRegistration = apps.get_model("kcevent", "KCEventRegistration")
    for row in Participant.objects.all():
        # check if a proper ParticipantRole exists..
        if row.role_old:
            # get event...
            reg = KCEventRegistration.objects.get(reg_user=row)
            if not reg:
                row.role = None
                row.save()
            else:
                event = reg.reg_event
                txt = str(row.get_role_old_display())
                pr = None
                try:
                    pr = ParticipantRole.objects.get(event=event, name=txt)
                except ParticipantRole.DoesNotExist:
                    pr = ParticipantRole(
                        event=event,
                        name=txt
                    )
                    pr.save()
                row.role = pr
                row.save()

class Migration(migrations.Migration):

    dependencies = [
        ("kcevent", "0060_kcevent_enableemergencycontacts_kcemergencycontact"),
    ]

    operations = [
        migrations.AlterField(
            model_name="kceventregistration",
            name="reg_status",
            field=models.CharField(
                choices=[
                    (None, "Please choose status of registration"),
                    ("incomplete", "Registration incomplete"),
                    ("registered", "Registered"),
                    ("waitlist", "On waitlist"),
                    ("confirmed", "Confirmed"),
                    ("active", "Active"),
                    ("cancelled", "Cancelled"),
                    ("declined", "Declined"),
                ],
                default="incomplete",
                max_length=20,
                verbose_name="Registration status",
            ),
        ),
        migrations.CreateModel(
            name="ParticipantRole",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=250, verbose_name="Name")),
                (
                    "createdTime",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created on"),
                ),
                (
                    "updatedTime",
                    models.DateTimeField(auto_now=True, verbose_name="Updated on"),
                ),
                (
                    "event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="kcevent.kcevent",
                        verbose_name="Event",
                    ),
                ),
            ],
            options={
                "verbose_name": "Role",
                "verbose_name_plural": "Roles",
            },
        ),
        migrations.RenameField(
            model_name="kceventpricerule",
            old_name="role",
            new_name="role_old"
        ),
        migrations.AddField(
            model_name="kceventpricerule",
            name="role",
            field=models.ForeignKey(
                blank=True,
                default=None,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="kcevent.participantrole",
                verbose_name="Role",
            ),
        ),
        migrations.RenameField(
            model_name="participant",
            old_name="role",
            new_name="role_old"
        ),
        migrations.AddField(
            model_name="participant",
            name="role",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="kcevent.participantrole",
                verbose_name="Role",
            ),
        ),
        migrations.RunPython(convert_role_pricerule, reverse_code=migrations.RunPython.noop),
        migrations.RunPython(convert_role_participant, reverse_code=migrations.RunPython.noop),
        migrations.RemoveField(
            model_name="kceventpricerule",
            name="role_old"
        ),
        migrations.RemoveField(
            model_name="participant",
            name="role_old"
        ),
    ]
